{"version":3,"file":"static/js/699.f1729d61.chunk.js","mappings":"kNACA,EAA4B,0BAA5B,EAAmE,2BAAnE,EAA4G,4BAA5G,EAAuJ,6BAAvJ,EAAgM,0BAAhM,EAAsO,0BAAtO,EAA6Q,2B,SCgD7Q,EA3Ce,WACb,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GASxB,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJH,EAAAA,EAAAA,MAAA,QAAMK,SAVW,SAACC,GACpBA,EAAEC,iBACFC,MAAM,4FAADC,OAA6Ff,IAC/FgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAI,OAAId,EAAUc,EAAKC,QAAQ,GACzC,EAKkCb,UAAWC,EAAkBC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,SACEW,KAAK,OACLC,MAAOtB,EACPuB,SAAU,SAACX,GAAC,OAAKX,EAASW,EAAEY,OAAOF,MAAM,EACzCG,YAAY,wBACZlB,UAAWC,KAEbE,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASd,UAAWC,EAAoBC,SAAC,eAExDC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAiBC,SAC7BL,EAAOsB,KAAI,SAAAC,GAAK,OACfjB,EAAAA,EAAAA,KAAA,MAAmBH,UAAWC,EAAiBC,UAC7CH,EAAAA,EAAAA,MAACsB,EAAAA,GAAI,CAACC,GAAE,WAAAd,OAAaY,EAAMG,IAAKrB,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKqB,IAAG,kCAAAhB,OAAoCY,EAAMK,aAAeC,IAAKN,EAAMO,MAAO3B,UAAWC,KAC9FE,EAAAA,EAAAA,KAAA,KAAAD,SAAIkB,EAAMO,YAHLP,EAAMG,GAKV,QAKf,C","sources":["webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Search_container__JDaLY\",\"searchForm\":\"Search_searchForm__0FeD+\",\"searchInput\":\"Search_searchInput__Qk-44\",\"searchButton\":\"Search_searchButton__8Jp1t\",\"movieList\":\"Search_movieList__Rr3Hv\",\"movieItem\":\"Search_movieItem__S1edX\",\"movieImage\":\"Search_movieImage__mZfy3\"};","// src/components/Search/Search.jsx\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Search.module.css';\n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=493c6d740f024fcc02750f44c1518471&query=${query}`)\n      .then(response => response.json())\n      .then(data => setMovies(data.results));\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearch} className={styles.searchForm}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Search for a movie...\"\n          className={styles.searchInput}\n        />\n        <button type=\"submit\" className={styles.searchButton}>Search</button>\n      </form>\n      <ul className={styles.movieList}>\n        {movies.map(movie => (\n          <li key={movie.id} className={styles.movieItem}>\n            <Link to={`/movies/${movie.id}`}>\n              <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title} className={styles.movieImage} />\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  query: PropTypes.string,\n  movies: PropTypes.array,\n};\n\nexport default Search;\n"],"names":["_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","movies","setMovies","_jsxs","className","styles","children","_jsx","onSubmit","e","preventDefault","fetch","concat","then","response","json","data","results","type","value","onChange","target","placeholder","map","movie","Link","to","id","src","poster_path","alt","title"],"sourceRoot":""}